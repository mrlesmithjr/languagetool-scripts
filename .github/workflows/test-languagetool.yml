name: Test LanguageTool Setup Scripts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Homebrew (if not available)
      - name: Install Homebrew
        run: |
          if ! command -v brew &>/dev/null; then
            echo "Homebrew not found. Installing..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          # Verify Homebrew installation
          if ! command -v brew &>/dev/null; then
            echo "Homebrew installation failed!"
            exit 1
          fi
          echo "Homebrew successfully installed."

      # Step 3: Install Java (OpenJDK 17)
      - name: Install Java
        run: |
          brew install --quiet openjdk@17
          sudo ln -sfn $(brew --prefix)/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
          # Add Java to PATH
          echo "$(brew --prefix)/opt/openjdk@17/bin" >> $GITHUB_PATH
          # Verify Java installation
          java -version
          echo "Java successfully installed."

      # Step 4: Run install-languagetool.sh to test installation
      - name: Test install-languagetool.sh script
        run: |
          chmod +x ./install-languagetool.sh
          ./install-languagetool.sh --version 6.6

      # Step 5: Verify if LanguageTool server is running
      - name: Verify LanguageTool server is running
        run: |
          # Try multiple times with increasing wait times
          MAX_ATTEMPTS=5
          for i in $(seq 1 $MAX_ATTEMPTS); do
            echo "Attempt $i of $MAX_ATTEMPTS to connect to LanguageTool server..."
            if curl -s http://localhost:8081 > /dev/null; then
              echo "✅ LanguageTool server is running!"
              break
            elif [ $i -eq $MAX_ATTEMPTS ]; then
              echo "❌ Could not connect to LanguageTool server after $MAX_ATTEMPTS attempts"
              echo "Checking server logs:"
              cat /tmp/languagetool.out || true
              cat /tmp/languagetool.err || true
              exit 1
            else
              echo "Waiting before next attempt..."
              sleep $(( i * 2 ))  # Increase wait time with each attempt
            fi
          done

      # Step 6: Test the API with a simple request
      - name: Test LanguageTool API
        run: |
          echo "Testing API with a text check..."
          curl -X POST \
            -d "language=en-US" \
            -d "text=This is a test." \
            http://localhost:8081/v2/check
          echo

      # Step 7: Stop LanguageTool server gracefully
      - name: Stop LanguageTool server
        run: |
          echo "Stopping LanguageTool server..."
          if pgrep -f languagetool-server.jar > /dev/null; then
            pkill -f languagetool-server.jar || true
            # Wait to ensure process is terminated
            sleep 2
            # Force kill if still running
            pkill -9 -f languagetool-server.jar 2>/dev/null || true
            echo "LanguageTool server stopped."
          else
            echo "No running LanguageTool server found."
          fi

      # Step 8: Test uninstall-languagetool.sh script
      - name: Test uninstall-languagetool.sh script
        run: |
          chmod +x ./uninstall-languagetool.sh
          ./uninstall-languagetool.sh --force --yes

      # Step 9: Verify uninstallation
      - name: Verify uninstallation
        run: |
          # Check if installation directory was removed
          if [ -d "$HOME/.languagetool" ]; then
            echo "❌ ERROR: Installation directory still exists"
            exit 1
          else
            echo "✅ Installation directory successfully removed"
          fi

          # Check if service configuration was removed
          if [ -f "$HOME/Library/LaunchAgents/org.languagetool.server.plist" ]; then
            echo "❌ ERROR: Service configuration still exists"
            exit 1
          else
            echo "✅ Service configuration successfully removed"
          fi

      # Step 10: Cleanup (always runs)
      - name: Final cleanup
        if: always()
        run: |
          # Stop any running processes
          pkill -f languagetool-server.jar 2>/dev/null || true

          # Remove any leftover files
          rm -rf ~/.languagetool
          rm -f ~/Library/LaunchAgents/org.languagetool.server.plist
          rm -f /tmp/languagetool.out /tmp/languagetool.err /tmp/languagetool.log

          echo "Final cleanup complete."
